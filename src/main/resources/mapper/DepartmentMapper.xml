<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xt.mybatis.mapper.DepartmentMapper">

    <select id="getDeptById" resultType="com.xt.mybatis.bean.Department">
        select id, dept_name from department where id=#{id}
    </select>

    <!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则  -->
    <resultMap id="myDeptMap" type="Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="deptName"/>
        <!--
			collection定义关联集合类型的属性的封装规则
			ofType:指定集合里面元素的类型
		-->
        <collection property="emps" ofType="Employee">
            <!-- 定义这个集合中元素的封装规则 -->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>


    <select id="getDeptByIdPlus" resultMap="myDeptMap">
        SELECT e.id eid, e.`last_name` last_name, e.`email` email, e.`gender`, d.`id` id, d.`dept_name` dept_name
        FROM department d
        LEFT JOIN employee e
        ON e.`d_id`=d.`id`
        WHERE d.`id`=#{id}
    </select>
    <!-- collection：分段查询 -->
    <resultMap id="myDeptByStep" type="Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="deptName"/>
        <collection property="emps" ofType="Employee"
                    select="com.xt.mybatis.mapper.EmployeeMapperPlus.getEmpsByDeptId"
                    column="{deptId=id}" fetchType="lazy"/>
    </resultMap>
    <select id="getDeptByIdStep" resultMap="myDeptByStep">
        select * from department where id=#{id}
    </select>

    <!-- 扩展：多列的值传递过去：
			将多列的值封装map传递；
			column="{key1=column1,key2=column2}"
		fetchType="lazy"：表示使用延迟加载；
				- lazy：延迟
				- eager：立即
	 -->
</mapper>